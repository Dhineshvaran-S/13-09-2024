/* Card Styles */
.card {
  display: flex;
  flex-direction: column;
  border-radius: 8px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
  overflow: hidden;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  background-color: #fff;
  max-width: 350px; /* Adjust card size */
  margin: 0 auto;
}

.card:hover {
  transform: translateY(-8px);
  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.25);
}

.card-content {
  display: flex;
  flex-direction: column;
  height: 100%;
}

.card-image {
  width: 100%;
  height: 200px; /* Adjust image height */
  overflow: hidden;
  position: relative;
}

.card-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.3s ease;
}

.card:hover .card-image img {
  transform: scale(1.1);
}

/* "Booked" badge - angled */
/* "Booked" badge - angled and aligned */
.booked-badge {
  position: absolute;
  top: 10px;
  right: -45px; /* Adjust position for better alignment */
  background-color: red;
  color: white;
  padding: 7px 20px; /* Increased padding for better text visibility */
  font-size: 0.9rem; /* Slightly increased font size */
  font-weight: bold;
  transform: rotate(45deg); /* Keep the 45-degree rotation */
  z-index: 10;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  width: 150px; /* Set fixed width to ensure full text is visible */
  text-align: center; /* Center the text within the badge */
}

/* Card Details */
.card-details {
  padding: 15px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.card-header-content {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.card-price {
  font-size: 1.2rem;
  font-weight: bold;
  color: #007bff;
}

.price-label {
  font: size 2px;;
  color: #666;
}

/* Card Footer */
.card-footer {
  padding: 10px;
  background-color: #007bff;
  color: #fff;
  text-align: center;
  font-size: 0.85rem;
  border-top: 1px solid #0056b3;
}
.card-detail {
  padding: 10px;
  background-color: #ffffff;
  color: #fff;
  text-align: center;
  font-size: 0.85rem;
  border-top: 1px solid #0056b3;
}

/* Responsive Design */
@media (max-width: 768px) {
  .card {
    max-width: 100%;
  }

  .card-image {
    height: 150px;
  }

  .booked-badge {
    font-size: 0.7rem;
    padding: 4px 10px;
    right: -35px; /* Adjust for smaller screens */
  }

  .card-price {
    font-size: 1rem;
  }

  .price-label {
    font-size: 0.75rem;
  }

  .card-footer {
    font-size: 0.75rem;
  }
}
.room-card-header-content {
  display: flex;
  flex-direction: column; /* Aligns children vertically */
  gap: 10px; /* Adds spacing between lines */
  padding: 10px; /* Adds padding around the details */
}

.price-label {
  display: block; /* Ensures each span is treated as a block element */
  font-size: 0.9rem; /* Adjust font size as needed */
  color: #333; /* Adjust text color as needed */
  margin-bottom: 5px; /* Adds space below each line */
}
@media (max-width: 768px) {
  .room-details {
    padding: 5px; /* Adjust padding for smaller screens */
  }

  .price-label {
    font-size: 0.8rem; /* Adjust font size for smaller screens */
  }
}

















ts   


import { HttpClient } from '@angular/common/http';
import { Component, OnInit } from '@angular/core';
@Component({
  selector: 'app-booked-rooms',
  templateUrl: './booked-rooms.component.html',
  styleUrl: './booked-rooms.component.css'
})
export class BookedRoomsComponent implements OnInit {
  bookedRooms: any[] = [];
  loading: boolean = true;
  error: string | null = null;

  constructor(private http: HttpClient) {}

  ngOnInit(): void {
    this.http.get<any[]>('http://localhost:5046/api/Payment/GetBookedRoomsimage').subscribe({
      next: (data) => {
        console.log(data)
        this.bookedRooms = data;
        this.loading = false;
      },
      error: (err) => {
        this.error = 'Failed to load booked rooms';
        this.loading = false;
      }
    });
  }
}



html

<div *ngIf="loading" class="text-center">Loading...</div>
<div *ngIf="error" class="alert alert-danger text-center">{{ error }}</div>
<div *ngIf="!loading && !error" class="container">
  <div class="row">
    <div *ngFor="let room of bookedRooms" class="col-md-4 mb-4">
      <div class="card">
        <div class="card-image">
          <img [src]="room.imagePath" class="card-img-top" alt="Room image">
          <div class="booked-badge">Booked</div>
          <div class="Cancelled-overlay">Canceled</div> 
        </div>
       
        <div class="card-detail">
          <span class="price-label">PRICE : {{ room.price }}</span> 
          <span class="price-label">RATING : {{ room.rating }}</span>
          <span class="price-label">LOCATION : {{ room.location }}</span>
          <span class="price-label">DESCRIPTION : {{ room.description }}</span>
          <span class="price-label">AMENITIES : {{ room.amenities }}</span>
          <span class="price-label">ROOM TYPE : {{ room.roomType }}</span>
        </div>

        <div class="card-footer">
          <button class="cancel-button">Cancel</button> <!-- Cancel Button -->
        </div>
      </div>
    </div>
  </div>
</div>
